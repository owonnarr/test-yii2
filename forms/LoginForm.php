<?php
/**
 * Created by PhpStorm.
 * User: owonnarr
 * Date: 07.05.19
 * Time: 11:30
 */

namespace app\forms;

use yii\base\Model;
use app\helpers\FileHelper;
use Yii;

class LoginForm extends Model
{
    public $username;
    public $password;
    public $users = [];

    private $file = "users.txt";
    private $fileHelper;


    public function init()
    {
        $this->fileHelper = new FileHelper();
        $this->users = $this->fileHelper->getFileData($this->file);
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function rules()
    {
        return [
          [['username', 'password'], 'required', 'message' => 'Поле не может быть пустым'],
          ['username', 'filter', 'filter' => [$this, 'issetUser']],
          ['password', 'filter', 'filter' => [$this, 'issetPassword']],
          [['username'], 'string', 'max' => 10, 'min' => 3],
          [['password'], 'string', 'max' => 20, 'min' => 6],
        ];
    }

    /**
     * search $value form in users.txt
     * @param $value
     * @return bool
     */
    public function issetUser($value)
    {
        $username = trim($value);

        foreach ($this->users as $user) {
            foreach ($user as $key => $value) {
                if ($key === $username) {
                    return $username;
                }
            }
        }
        return $this->addError('username', 'Такого имени не существует.');
    }

    /**
     * check isset user password
     * @param $value
     * @return bool
     */
    public function issetPassword($value)
    {
        $password = trim($value);

        foreach ($this->users as $user) {
            foreach ($user as $key => $value) {
                if ($key === $this->username && $password === $value) {
                    return $password;
                }
            }
        }
        return $this->addError('password', 'Неправильный пароль.');
    }

}